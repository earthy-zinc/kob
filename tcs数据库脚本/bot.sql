/*
 Navicat Premium Data Transfer

 Source Server         : test
 Source Server Type    : MySQL
 Source Server Version : 50726
 Source Host           : localhost:3306
 Source Schema         : kob

 Target Server Type    : MySQL
 Target Server Version : 50726
 File Encoding         : 65001

 Date: 31/08/2023 11:09:46
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for bot
-- ----------------------------
DROP TABLE IF EXISTS `bot`;
CREATE TABLE `bot`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NULL DEFAULT NULL,
  `title` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `description` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,
  `content` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL,
  `create_time` datetime NULL DEFAULT NULL,
  `modify_time` datetime NULL DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 5 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of bot
-- ----------------------------
INSERT INTO `bot` VALUES (1, 1, '111', '111', 'package com.kob.botrunningsystem.utils;\r\n\r\nimport java.io.File;\r\nimport java.io.FileNotFoundException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Scanner;\r\n\r\npublic class Bot implements java.util.function.Supplier<Integer> {\r\n    private boolean check_tail_increasing(int step) { // 检验当前回合，蛇的长度是否增加\r\n        if (step <= 10)\r\n            return true;\r\n        return step % 3 == 1;\r\n    }\r\n\r\n    public List<Cell> getCells(int sx, int sy, String steps) {\r\n        steps = steps.substring(1, steps.length() - 1);\r\n        List<Cell> res = new ArrayList<>();\r\n\r\n        int[] dx = {-1, 0, 1, 0}, dy = {0, 1, 0, -1};\r\n        int x = sx, y = sy;\r\n        int step = 0;\r\n        res.add(new Cell(x, y));\r\n        for (int i = 0; i < steps.length(); i++) {\r\n            int d = steps.charAt(i) - \'0\';\r\n            x += dx[d];\r\n            y += dy[d];\r\n            res.add(new Cell(x, y));\r\n            if (!check_tail_increasing(++step)) {\r\n                res.remove(0);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    public Integer nextMove(String input) {\r\n        String[] strs = input.split(\"#\");\r\n        int[][] g = new int[13][14];\r\n        for (int i = 0, k = 0; i < 13; i++) {\r\n            for (int j = 0; j < 14; j++, k++) {\r\n                if (strs[0].charAt(k) == \'1\') {\r\n                    g[i][j] = 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        int aSx = Integer.parseInt(strs[1]), aSy = Integer.parseInt(strs[2]);\r\n        int bSx = Integer.parseInt(strs[4]), bSy = Integer.parseInt(strs[5]);\r\n\r\n        List<Cell> aCells = getCells(aSx, aSy, strs[3]);\r\n        List<Cell> bCells = getCells(bSx, bSy, strs[6]);\r\n\r\n        for (Cell c : aCells)\r\n            g[c.x][c.y] = 1;\r\n        for (Cell c : bCells)\r\n            g[c.x][c.y] = 1;\r\n\r\n        int[] dx = {-1, 0, 1, 0}, dy = {0, 1, 0, -1};\r\n        for (int i = 0; i < 4; i++) {\r\n            int x = aCells.get(aCells.size() - 1).x + dx[i];\r\n            int y = aCells.get(aCells.size() - 1).y + dy[i];\r\n            if (x >= 0 && x < 13 && y >= 0 && y < 14 && g[x][y] == 0) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    @Override\r\n    public Integer get() {\r\n        File file = new File(\"input.txt\");\r\n        try {\r\n            Scanner sc = new Scanner(file);\r\n            return nextMove(sc.next());\r\n        } catch (FileNotFoundException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    static class Cell {\r\n        public int x, y;\r\n\r\n        public Cell(int x, int y) {\r\n            this.x = x;\r\n            this.y = y;\r\n        }\r\n    }\r\n}\r\n', '2023-08-28 22:32:12', '2023-08-28 22:32:16');
INSERT INTO `bot` VALUES (2, 1, '222', '222', 'package com.kob.botrunningsystem.utils;\r\n\r\nimport java.io.File;\r\nimport java.io.FileNotFoundException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Scanner;\r\n\r\npublic class Bot implements java.util.function.Supplier<Integer> {\r\n    private boolean check_tail_increasing(int step) { // 检验当前回合，蛇的长度是否增加\r\n        if (step <= 10)\r\n            return true;\r\n        return step % 3 == 1;\r\n    }\r\n\r\n    public List<Cell> getCells(int sx, int sy, String steps) {\r\n        steps = steps.substring(1, steps.length() - 1);\r\n        List<Cell> res = new ArrayList<>();\r\n\r\n        int[] dx = {-1, 0, 1, 0}, dy = {0, 1, 0, -1};\r\n        int x = sx, y = sy;\r\n        int step = 0;\r\n        res.add(new Cell(x, y));\r\n        for (int i = 0; i < steps.length(); i++) {\r\n            int d = steps.charAt(i) - \'0\';\r\n            x += dx[d];\r\n            y += dy[d];\r\n            res.add(new Cell(x, y));\r\n            if (!check_tail_increasing(++step)) {\r\n                res.remove(0);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    public Integer nextMove(String input) {\r\n        String[] strs = input.split(\"#\");\r\n        int[][] g = new int[13][14];\r\n        for (int i = 0, k = 0; i < 13; i++) {\r\n            for (int j = 0; j < 14; j++, k++) {\r\n                if (strs[0].charAt(k) == \'1\') {\r\n                    g[i][j] = 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        int aSx = Integer.parseInt(strs[1]), aSy = Integer.parseInt(strs[2]);\r\n        int bSx = Integer.parseInt(strs[4]), bSy = Integer.parseInt(strs[5]);\r\n\r\n        List<Cell> aCells = getCells(aSx, aSy, strs[3]);\r\n        List<Cell> bCells = getCells(bSx, bSy, strs[6]);\r\n\r\n        for (Cell c : aCells)\r\n            g[c.x][c.y] = 1;\r\n        for (Cell c : bCells)\r\n            g[c.x][c.y] = 1;\r\n\r\n        int[] dx = {-1, 0, 1, 0}, dy = {0, 1, 0, -1};\r\n        for (int i = 0; i < 4; i++) {\r\n            int x = aCells.get(aCells.size() - 1).x + dx[i];\r\n            int y = aCells.get(aCells.size() - 1).y + dy[i];\r\n            if (x >= 0 && x < 13 && y >= 0 && y < 14 && g[x][y] == 0) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    @Override\r\n    public Integer get() {\r\n        File file = new File(\"input.txt\");\r\n        try {\r\n            Scanner sc = new Scanner(file);\r\n            return nextMove(sc.next());\r\n        } catch (FileNotFoundException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    static class Cell {\r\n        public int x, y;\r\n\r\n        public Cell(int x, int y) {\r\n            this.x = x;\r\n            this.y = y;\r\n        }\r\n    }\r\n}\r\n', '2023-08-28 22:34:25', '2023-08-28 22:34:25');
INSERT INTO `bot` VALUES (3, 1, '333', '333', 'package com.kob.botrunningsystem.utils;\r\n\r\nimport java.io.File;\r\nimport java.io.FileNotFoundException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Scanner;\r\n\r\npublic class Bot implements java.util.function.Supplier<Integer> {\r\n    private boolean check_tail_increasing(int step) { // 检验当前回合，蛇的长度是否增加\r\n        if (step <= 10)\r\n            return true;\r\n        return step % 3 == 1;\r\n    }\r\n\r\n    public List<Cell> getCells(int sx, int sy, String steps) {\r\n        steps = steps.substring(1, steps.length() - 1);\r\n        List<Cell> res = new ArrayList<>();\r\n\r\n        int[] dx = {-1, 0, 1, 0}, dy = {0, 1, 0, -1};\r\n        int x = sx, y = sy;\r\n        int step = 0;\r\n        res.add(new Cell(x, y));\r\n        for (int i = 0; i < steps.length(); i++) {\r\n            int d = steps.charAt(i) - \'0\';\r\n            x += dx[d];\r\n            y += dy[d];\r\n            res.add(new Cell(x, y));\r\n            if (!check_tail_increasing(++step)) {\r\n                res.remove(0);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    public Integer nextMove(String input) {\r\n        String[] strs = input.split(\"#\");\r\n        int[][] g = new int[13][14];\r\n        for (int i = 0, k = 0; i < 13; i++) {\r\n            for (int j = 0; j < 14; j++, k++) {\r\n                if (strs[0].charAt(k) == \'1\') {\r\n                    g[i][j] = 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        int aSx = Integer.parseInt(strs[1]), aSy = Integer.parseInt(strs[2]);\r\n        int bSx = Integer.parseInt(strs[4]), bSy = Integer.parseInt(strs[5]);\r\n\r\n        List<Cell> aCells = getCells(aSx, aSy, strs[3]);\r\n        List<Cell> bCells = getCells(bSx, bSy, strs[6]);\r\n\r\n        for (Cell c : aCells)\r\n            g[c.x][c.y] = 1;\r\n        for (Cell c : bCells)\r\n            g[c.x][c.y] = 1;\r\n\r\n        int[] dx = {-1, 0, 1, 0}, dy = {0, 1, 0, -1};\r\n        for (int i = 0; i < 4; i++) {\r\n            int x = aCells.get(aCells.size() - 1).x + dx[i];\r\n            int y = aCells.get(aCells.size() - 1).y + dy[i];\r\n            if (x >= 0 && x < 13 && y >= 0 && y < 14 && g[x][y] == 0) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    @Override\r\n    public Integer get() {\r\n        File file = new File(\"input.txt\");\r\n        try {\r\n            Scanner sc = new Scanner(file);\r\n            return nextMove(sc.next());\r\n        } catch (FileNotFoundException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    static class Cell {\r\n        public int x, y;\r\n\r\n        public Cell(int x, int y) {\r\n            this.x = x;\r\n            this.y = y;\r\n        }\r\n    }\r\n}\r\n', '2023-08-28 22:50:04', '2023-08-28 22:50:04');
INSERT INTO `bot` VALUES (4, 1, ' vb', '发', 'package com.kob.botrunningsystem.utils;\r\n\r\nimport java.io.File;\r\nimport java.io.FileNotFoundException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Scanner;\r\n\r\npublic class Bot implements java.util.function.Supplier<Integer> {\r\n    private boolean check_tail_increasing(int step) { // 检验当前回合，蛇的长度是否增加\r\n        if (step <= 10)\r\n            return true;\r\n        return step % 3 == 1;\r\n    }\r\n\r\n    public List<Cell> getCells(int sx, int sy, String steps) {\r\n        steps = steps.substring(1, steps.length() - 1);\r\n        List<Cell> res = new ArrayList<>();\r\n\r\n        int[] dx = {-1, 0, 1, 0}, dy = {0, 1, 0, -1};\r\n        int x = sx, y = sy;\r\n        int step = 0;\r\n        res.add(new Cell(x, y));\r\n        for (int i = 0; i < steps.length(); i++) {\r\n            int d = steps.charAt(i) - \'0\';\r\n            x += dx[d];\r\n            y += dy[d];\r\n            res.add(new Cell(x, y));\r\n            if (!check_tail_increasing(++step)) {\r\n                res.remove(0);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    public Integer nextMove(String input) {\r\n        String[] strs = input.split(\"#\");\r\n        int[][] g = new int[13][14];\r\n        for (int i = 0, k = 0; i < 13; i++) {\r\n            for (int j = 0; j < 14; j++, k++) {\r\n                if (strs[0].charAt(k) == \'1\') {\r\n                    g[i][j] = 1;\r\n                }\r\n            }\r\n        }\r\n\r\n        int aSx = Integer.parseInt(strs[1]), aSy = Integer.parseInt(strs[2]);\r\n        int bSx = Integer.parseInt(strs[4]), bSy = Integer.parseInt(strs[5]);\r\n\r\n        List<Cell> aCells = getCells(aSx, aSy, strs[3]);\r\n        List<Cell> bCells = getCells(bSx, bSy, strs[6]);\r\n\r\n        for (Cell c : aCells)\r\n            g[c.x][c.y] = 1;\r\n        for (Cell c : bCells)\r\n            g[c.x][c.y] = 1;\r\n\r\n        int[] dx = {-1, 0, 1, 0}, dy = {0, 1, 0, -1};\r\n        for (int i = 0; i < 4; i++) {\r\n            int x = aCells.get(aCells.size() - 1).x + dx[i];\r\n            int y = aCells.get(aCells.size() - 1).y + dy[i];\r\n            if (x >= 0 && x < 13 && y >= 0 && y < 14 && g[x][y] == 0) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    @Override\r\n    public Integer get() {\r\n        File file = new File(\"input.txt\");\r\n        try {\r\n            Scanner sc = new Scanner(file);\r\n            return nextMove(sc.next());\r\n        } catch (FileNotFoundException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n    }\r\n\r\n    static class Cell {\r\n        public int x, y;\r\n\r\n        public Cell(int x, int y) {\r\n            this.x = x;\r\n            this.y = y;\r\n        }\r\n    }\r\n}\r\n', NULL, NULL);

SET FOREIGN_KEY_CHECKS = 1;
